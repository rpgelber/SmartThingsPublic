/**
 *  HTD Zone
 *
 *  Copyright 2018 Aaron Turner
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
metadata {
    definition (name: "HTD Zone", namespace: "synfinatic", author: "Aaron Turner") {
        capability "Audio Mute"
        capability "Audio Volume"
        capability "Media Input Source"
        capability "Switch"

        attribute "bass", "enum", ["up", "down"]
        attribute "treble", "enum", ["up", "down"]
        attribute "balance", "enum", ["left", "right"]
    }


    simulator {
        // TODO: define status and reply messages here
    }

    tiles {
        // TODO: define your main and details tiles here
    }
}

// parse events into attributes
def parse(String description) {
    log.debug "Parsing '${description}'"
    // TODO: handle 'mute' attribute
    // TODO: handle 'volume' attribute
    // TODO: handle 'inputSource' attribute
    // TODO: handle 'supportedInputSources' attribute
    // TODO: handle 'switch' attribute
    // TODO: handle 'bass' attribute
    // TODO: handle 'treble' attribute
    // TODO: handle 'balance' attribute

}

// handle commands
def setMute() {
    log.debug "Executing 'setMute'"
    // TODO: handle 'setMute' command
}

def mute() {
    log.debug "Executing 'mute'"
    // TODO: handle 'mute' command
}

def unmute() {
    log.debug "Executing 'unmute'"
    // TODO: handle 'unmute' command
}

def setVolume() {
    log.debug "Executing 'setVolume'"
    // TODO: handle 'setVolume' command
}

def volumeUp() {
    log.debug "Executing 'volumeUp'"
    // TODO: handle 'volumeUp' command
}

def volumeDown() {
    log.debug "Executing 'volumeDown'"
    // TODO: handle 'volumeDown' command
}

def setInputSource() {
    log.debug "Executing 'setInputSource'"
    // TODO: handle 'setInputSource' command
}

def on() {
    log.debug "Executing 'on'"
    // TODO: handle 'on' command
}

def off() {
    log.debug "Executing 'off'"
    // TODO: handle 'off' command
}
